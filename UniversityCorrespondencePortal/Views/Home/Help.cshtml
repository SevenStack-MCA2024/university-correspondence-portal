@{
    ViewBag.Title = "Help";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .help-title {
        font-size: 32px;
        font-weight: 700;
        color: #004080;
    }

    .help-subtext {
        font-size: 18px;
        color: #555;
        font-weight: 500;
    }

    .video-wrapper {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 */
        height: 0;
        overflow: hidden;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

        .video-wrapper iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
        }
</style>

<div class="text-center mb-5">
    <h2 class="help-title"><i class="bi bi-question-circle"></i> Help & User Guide</h2>
    <p class="help-subtext">Watch these tutorials to understand how to use the University Correspondence Portal:</p>
</div>

<div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">

         Tutorial Video 1 
        <div class="video-wrapper">
            <div id="player1"></div>
        </div>

         Tutorial Video 2 
        <div class="video-wrapper">
            <div id="player2"></div>
        </div>

         Tutorial Video 3 
        <div class="video-wrapper">
            <div id="player3"></div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://www.youtube.com/iframe_api"></script>
    <script>
        var players = [];

        function onYouTubeIframeAPIReady() {
            players.push(new YT.Player('player1', {
                videoId: 'UFy1-eRYTqk',
                events: {
                    'onStateChange': onPlayerStateChange
                }
            }));

            players.push(new YT.Player('player2', {
                videoId: 'jpsB18MP4hQ',
                events: {
                    'onStateChange': onPlayerStateChange
                }
            }));

            players.push(new YT.Player('player3', {
                videoId: 'B8Yc37IbWu0',
                events: {
                    'onStateChange': onPlayerStateChange
                }
            }));
        }

        function onPlayerStateChange(event) {
            if (event.data === YT.PlayerState.PLAYING) {
                players.forEach(function (player) {
                    if (player !== event.target && player.getPlayerState() === YT.PlayerState.PLAYING) {
                        player.pauseVideo();
                    }
                });
            }
        }
    </script>
}
