@model UniversityCorrespondencePortal.Models.ViewModels.ReportViewModel
@{
    ViewBag.Title = "Reports";
    Layout = "~/Views/Shared/_ClerkLayout.cshtml";
}

<div class="container-fluid mt-3">
    <h2 class="mb-4">Reports</h2>

    <!-- Report Type Toggle -->
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="btn-group" role="group">
                <a href="@Url.Action("Report", new { reportType = "Inward", fromDate = Model.FromDate, toDate = Model.ToDate })"
                   class="btn @(Model.ReportType == "Inward" ? "btn-primary" : "btn-outline-primary")">Inward Letters</a>
                <a href="@Url.Action("Report", new { reportType = "Outward", fromDate = Model.FromDate, toDate = Model.ToDate })"
                   class="btn @(Model.ReportType == "Outward" ? "btn-primary" : "btn-outline-primary")">Outward Letters</a>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="row g-3 mb-3">
        @using (Html.BeginForm("Report", "Clerk", FormMethod.Get))
        {
            <input type="hidden" name="reportType" value="@Model.ReportType" />

            <div class="col-md-3">
                <label>From Date</label>
                <input type="date" name="fromDate" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>To Date</label>
                <input type="date" name="toDate" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" class="form-control" />
            </div>
            <div class="col-md-3 d-flex align-items-end gap-2">
                <button type="submit" class="btn btn-primary">Apply Filter</button>
                <a href="@Url.Action("Report", new { reportType = Model.ReportType })" class="btn btn-secondary">Clear Filter</a>
            </div>
        }
    </div>

    <!-- Table -->
    <div class="table-responsive">
        @if (Model.ReportType == "Inward")
        {
            <table class="table table-bordered table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Inward Number</th>
                        <th>Date Received</th>
                        <th>Sender Department</th>
                        <th>Sender Name</th>
                        <th>Subject</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.InwardLetters != null && Model.InwardLetters.Any())
                    {
                        foreach (var letter in Model.InwardLetters)
                        {
                            <tr>
                                <td>@letter.InwardNumber</td>
                                <td>@(letter.DateReceived?.ToString("dd-MM-yyyy"))</td>
                                <td>@letter.SenderDepartment</td>
                                <td>@letter.SenderName</td>
                                <td>@letter.Subject</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No inward letters found</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <table class="table table-bordered table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Letter No</th>
                        <th>Date</th>
                        <th>Sender Name</th>
                        <th>Receiver Name</th>
                        <th>Receiver Department</th>
                        <th>Subject</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.OutwardLetters != null && Model.OutwardLetters.Any())
                    {
                        foreach (var letter in Model.OutwardLetters)
                        {
                            <tr>
                                <td>@letter.LetterNo</td>
                                <td>@(letter.Date?.ToString("dd-MM-yyyy"))</td>
                                <td>@letter.SenderName</td>
                                <td>@letter.ReceiverName</td>
                                <td>@letter.ReceiverDepartment</td>
                                <td>@letter.Subject</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">No outward letters found</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <!-- Download Button -->
    <div class="mt-3 text-end">
        @using (Html.BeginForm("DownloadReport", "Clerk", FormMethod.Get))
        {
            <input type="hidden" name="reportType" value="@Model.ReportType" />
            <input type="hidden" name="fromDate" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" />
            <input type="hidden" name="toDate" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" />
            <button type="submit" class="btn btn-success">
                <i class="fas fa-download"></i> Download Report
            </button>
        }
    </div>
</div>