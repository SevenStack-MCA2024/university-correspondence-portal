@model UniversityCorrespondencePortal.Models.ViewModels.ResetPasswordViewModel

@{
    ViewBag.Title = "Reset Password";
}

<!-- Ensure Bootstrap is loaded if not already in your layout -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header bg-primary text-white text-center rounded-top-4">
                    <h4 class="mb-0">🔒 Reset Your Password</h4>
                </div>
                <div class="card-body p-4">
                    @using (Html.BeginForm("ResetPassword", "Clerk", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.LabelFor(m => m.NewPassword, htmlAttributes: new { @class = "form-label" })
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "newPassword", minlength = "6", required = "required" })
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                            <div id="strengthMessage" class="form-text mt-1"></div>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "confirmPassword", required = "required" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <button type="submit" class="btn btn-success w-100">Update Password</button>
                    }

                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @ViewBag.Error
                        </div>
                    }

                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-success mt-3" role="alert">
                            @ViewBag.Message
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Client-side validation and password strength -->
<script>
    (function () {
        'use strict';

        window.addEventListener('load', function () {
            const form = document.querySelector('.needs-validation');
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');
            const strengthMessage = document.getElementById('strengthMessage');

            function checkStrength(password) {
                let strength = 0;
                if (password.length >= 6) strength++;
                if (/[A-Z]/.test(password)) strength++;
                if (/[0-9]/.test(password)) strength++;
                if (/[\W]/.test(password)) strength++;

                const texts = ["Very Weak", "Weak", "Moderate", "Strong"];
                const colors = ["text-danger", "text-warning", "text-primary", "text-success"];
                const level = Math.max(0, strength - 1);

                strengthMessage.textContent = "Strength: " + texts[level];
                strengthMessage.className = "form-text " + colors[level];
            }

            newPassword.addEventListener('input', function () {
                checkStrength(this.value);
            });

            form.addEventListener('submit', function (event) {
                if (!form.checkValidity() || newPassword.value !== confirmPassword.value) {
                    event.preventDefault();
                    event.stopPropagation();

                    if (newPassword.value !== confirmPassword.value) {
                        alert("Passwords do not match.");
                    }
                }

                form.classList.add('was-validated');
            });
        });
    })();
</script>
