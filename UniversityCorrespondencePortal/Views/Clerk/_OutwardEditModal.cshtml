@model UniversityCorrespondencePortal.Models.ViewModels.OutwardLetterViewModel
@{
    var staffList = ViewBag.StaffList as List<UniversityCorrespondencePortal.Models.Staff>;
    var departments = ViewBag.Departments as List<UniversityCorrespondencePortal.Models.Department>;
}

<div class="modal fade" id="editModal@Model.OutwardLetterID" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="post" action="@Url.Action("EditOutwardLetter", "Clerk")">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.OutwardLetterID)
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">Edit Outward Letter</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body row g-3">

                    <div class="col-md-6">
                        <label>Letter Number</label>
                        <input type="text" name="LetterNumber" class="form-control" value="@Model.LetterNumber" required />
                    </div>

                    <div class="col-md-6">
                        <label>Date Received</label>
                        <input type="date" name="DateReceived" class="form-control" value="@Model.DateReceived?.ToString(" yyyy-MM-dd")" />
                    </div>

                    <div class="col-md-6">
                        <label>Time Received</label>
                        <input type="time" name="TimeReceived" class="form-control" value="@Model.TimeReceived?.ToString(@" hh\:mm")" />
                    </div>

                    <div class="col-md-6">
                        <label>Delivery Mode</label>
                        <input type="text" name="DeliveryMode" class="form-control" value="@Model.DeliveryMode" />
                    </div>

                    <div class="col-md-6">
                        <label>Sender (Staff)</label>
                        <select name="StaffID" class="form-select">
                            @foreach (var staff in staffList)
                            {
                                <option value="@staff.StaffID" @(staff.StaffID == Model.StaffID ? "selected" : "")>@staff.Name</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label>Sender Department</label>
                        <input type="text" name="SenderDepartment" class="form-control" value="@Model.SenderDepartment" readonly />
                    </div>

                    <div class="col-md-6">
                        <label>Receiver Department</label>
                        <select name="ReceiverDepartments" id="receiverDeptSelectEdit@Model.OutwardLetterID" class="form-select" onchange="toggleOther('receiverDeptSelectEdit@Model.OutwardLetterID', 'otherReceiverDeptEdit@Model.OutwardLetterID')">
                            @foreach (var dept in departments)
                            {
                                <option value="@dept.DepartmentName" @(dept.DepartmentName == Model.ReceiverDepartments ? "selected" : "")>@dept.DepartmentName</option>
                            }
                            <option value="Other" @(Model.ReceiverDepartments != null && !(departments.Any(d => d.DepartmentName == Model.ReceiverDepartments)) ? "selected" : "")>Other</option>
                        </select>
                        <input type="text" name="ReceiverDepartments" id="otherReceiverDeptEdit@Model.OutwardLetterID" class="form-control mt-2"
                               value="@(Model.ReceiverDepartments)" style="display:@((departments.Any(d => d.DepartmentName == Model.ReceiverDepartments)) ? "none" : "block")" />
                    </div>

                    <div class="col-md-6">
                        <label>Receiver Name(s)</label>
                        <input type="text" name="ReceiverNames" class="form-control" value="@Model.ReceiverNames" />
                    </div>

                    <div class="col-md-6">
                        <label>Reference ID</label>
                        <input type="text" name="ReferenceID" class="form-control" value="@Model.ReferenceID" />
                    </div>

                    <div class="col-md-6">
                        <label>Subject</label>
                        <input type="text" name="Subject" class="form-control" value="@Model.Subject" />
                    </div>

                    <div class="col-md-12">
                        <label>Remarks</label>
                        <textarea name="Remarks" class="form-control">@Model.Remarks</textarea>
                    </div>

                    <div class="col-md-6">
                        <label>Priority</label>
                        <select name="Priority" class="form-select">
                            <option value="Normal" @(Model.Priority == "Normal" ? "selected" : "")>Normal</option>
                            <option value="Urgent" @(Model.Priority == "Urgent" ? "selected" : "")>Urgent</option>
                            <option value="Confidential" @(Model.Priority == "Confidential" ? "selected" : "")>Confidential</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning"><i class="bi bi-save"></i> Save Changes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
